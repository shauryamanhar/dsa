#include<iostream>
using namespace std;
int G[4][4];
int vis[4];

template<class item>
class Queue{
  
  int front=0;
  int rear=0;
  item que[1000];
  public:
  
  void put(item ele)
  {
      que[rear++]=ele;
  }
  
  item get()
  {
      item p;
      p=que[front++];
      return p;
  }
  
  bool isempty()
  {
      return front==rear;
  }
  
    
};


bool bipitrate(int G[][4],int src)
{
    Queue<int>q;
    
    vis[src]=1;
    q.put(src);
    
    while(!q.isempty())
    {
        int u=q.get();
        
        if(G[u][u]==1)
        return false;
        
        for(int v=0;v<4;v++)
        {
            if(G[u][v]&&vis[v]==-1)
            {
                vis[v]=1-vis[u];
                q.put(v);
            }
            
            if(G[u][v]&&vis[v]==vis[u])
            return false;
        }
    }
    return true;
   
}

int main()
{
    for(int i=0;i<4;i++)
    {
        for(int j=0;j<4;j++)
        {
            cin>>G[i][j];
            
        }
        vis[i]=-1;
    }
    
    bool ans=bipitrate(G,0);
    cout<<ans<<endl;
}